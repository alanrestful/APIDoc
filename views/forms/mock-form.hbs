{{> header}}
<div class="container-fluid" data-pid="{{json project.env_json}}" data-app-id="{{app._id}}">
  <input class="hidden" type="hidden" value="{{app._id}}" name="appId"/>
  <div class="row">
    <div class="application-manager">
      <div class="col-sm-3 col-md-2 sidebar">
        <a style="text-decoration: none;" class="btn-block" href="../../projects"><i class="iconfont icon-fanhui"></i>
          返回应用列表</a>
        <hr>
        <ul class="nav nav-sidebar">
          <span style="margin-left: 20px;color: #8c8c8c;">API REFERENCE</span>
          {{#each nav}}
            <li>
              <a href="#{{name}}" class="nav-header collapsed" data-toggle="collapse">{{name}}<span
                  class="pull-right iconfont icon-xiangxia" style="font-size: 12px;"></span></a>
              <ul id="{{name}}" class="nav nav-list collapse js-path-data">
                {{#each key}}
                  <li><a href="#{{../name}}-{{this.title}}" title="{{this.title}}"
                         data-path="{{this.path}}" data-method="{{method}}"
                         data-all="{{json this}}" style="margin-left: 20px;">[{{method}}] {{path}}</a></li>
                {{/each}}
              </ul>
            </li>
          {{/each}}
        </ul>
      </div>
      <div class="col-sm-9 col-md-10 col-md-offset-2">
        <div class="row">
          <div class="col-sm-3 col-md-2" id="tab">
            <ul class="nav nav-sidebar js-mock-list">
              <li role="presentation" class="active"><a href="#">Home</a></li>
              <li role="presentation"><a href="#">Profile</a></li>
              <li role="presentation"><a href="#">Messages</a></li>
            </ul>
          </div>
          <div class="col-sm-4 col-md-4 js-mock-data-tab" data-info>
            <h4 class="path-title">
              /api/user [get]
            </h4>
            <div class="form-group">
              <label>名称:</label>
              <input class="input-group-sm js-mock-name"/>
            </div>
            <div class="js-criteria form-group">
              <table class="table table-bordered table-responsive js-mock-param-table">
                <thead>
                  <tr>
                    <td>字段名称</td>
                    <td>字段值</td>
                  </tr>
                </thead>

              </table>
            </div>
            <div class="form-group">

            </div>
            <div class="bottom-right">
              <button class="btn btn-sm btn-primary js-mock-save">保存
              </button>
            </div>
          </div>
          <div class="col-sm-5 col-md-6">
            <div id="editor" style="height:700px;max-width: 600px;">

            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript" src="/javascripts/lib/ace/ace.js"></script>
<script type="text/javascript">
  var editor = ace.edit("editor");
  editor.setTheme("ace/theme/monokai");
  editor.getSession().setMode("ace/mode/javascript");
  editor.$blockScrolling = Infinity

  var MockData = (function() {
    var _this = {};
    _this.mockDataTab = $('.js-mock-data-tab');
    _this.mockDataName = $('.js-mock-name');
    _this.mockList = $('.js-mock-list');
    _this.mockParamTable = '.js-mock-param-table';

    _this.genMockListLi = function(items) {
      var s = '';
      items.map(function(item, i) {
        if (i == 0) {
          s += `<li role="presentation" class="js-mock-li active"><a href="#" data-id=${item._id} data-info=${JSON.stringify(item)}>${item.name}</a></li>`;
        } else {
          s += `<li role="presentation" class="js-mock-li"><a href="#" data-id=${item._id} data-info=${JSON.stringify(item)}>${item.name}</a></li>`;
        }
      });

      if (items.length === 0) {
        s += `<li class="active"><a href="#" class="js-mock-add" role="add"><i class="icon-font icon-add">添加</i></a></li>`;
      } else {
        s += `<li><a href="#" class="js-mock-add" role="add"><i class="icon-font icon-add">添加</i></a></li>`;
      }
      return s;
    };

    _this.onClickPathNav = function(e) {
      e.preventDefault();
      var el = $(e.currentTarget);
      el.parents('ul').find('li a').removeClass('nav-active');
      el.addClass('nav-active');
      $.ajax({
        url: `/mock-reader/path-mock?path=${el.data('path')}&appId=${$('input[name=appId]').val()}&method=${el.data('method')}`,
        success: function(data) {
          if (data && data.success) {
            console.log(data);
            _this.mockList.data('path', el.data('all'));
            _this.mockList.html(_this.genMockListLi(data.result.mockList));
            _this.mockList.find('li.active a').trigger('click');
          }
        }
      })
    };

    _this.onCLickMockList = function(e) {
      e.preventDefault();
      var el = $(e.currentTarget);
      var data =el.data('info');
      var tpl = Handlebars.templates.forms['mock-tab']({path: el.parents('ul.js-mock-list').data('path'), data: data});
      _this.mockDataTab.html(tpl);
      el.tab('show');
      if (data.mockData) {
        editor.setValue(JSON.stringify(data.mockData, null, '\t'));
      } else {
        editor.setValue("");
      }
    };

    _this.addNewMock = function(e) {
      var el = $(e.currentTarget);

      $.ajax({url: `/mock-reader/resp-model/${$('.nav-active').data('all')._id}?method=${$('.nav-active').data('method')}`,
        success: function(data) {
          var tpl = Handlebars.templates.forms['mock-tab']({path: el.parents('ul.js-mock-list').data('path'), data: data});
          _this.mockDataTab.html(tpl);
          editor.setValue(data? JSON.stringify(data.result, null, '\t'): '');
          el.tab('show');
          _this.checkRequired();

        }
      });

    };

    _this.addParamRow = function() {
      var allParam = _this.mockList.data('path').param.map(function(item, i) {
        return item
      });
      var showParam = $(_this.mockParamTable).find('tbody tr').map(function(i, item) {
        var currentKey = $(item).find('td.js-param-key').data('key') || $(item).find('td.js-param-key select').val();
        for (var i = 0; i < allParam.length; i++ ) {
          (function() {
            var item = allParam[i];
            if (item['name'] === currentKey) {
              allParam.splice(i, 1);
            }
          })(i)
        }
      });
      if (allParam.length === 0) return;
      $('.js-mock-param-table').append(Handlebars.templates.forms['mock-param-row']({param: allParam}))
    };

    _this.mockSave = function(e) {
      e.preventDefault();
      var criteria = {};
      $('.js-mock-param-table tbody tr').each(function(i, item) {
        var name = $(item).find('td.js-param-key select').val();
        var value = $(item).find('td.js-param-value input').val();
        criteria[name] = value;
      });
      var parseData;
      try {
        parseData = JSON.parse(editor.getValue());
      } catch (e) {
        parseData = editor.getValue();
      }
      var data = {
        name: $('.js-mock-name').val(),
        path: $('.path-title').data('path'),
        method: $('.path-title').data('method'),
        applicationId: $('input[name=appId]').val(),
        criteria: criteria,
        mockData: parseData,
        _id: $('#tab .active a').data('id')
      };
      $.ajax({
        url: `/mock-server/mock/save`,
        type: 'POST',
        data: JSON.stringify(data),
        contentType: 'application/json',
        success: function(data) {
          if (data && data.success) {
            $('.nav-active').trigger('click');
          } else {
            alert('保存失败');
          }
        }
      })

    };

    _this.checkRequired = function() {
      var param = $('.nav-sidebar a.nav-active').data('all').param;
      param.map(function(item, i) {
        if (item.required) {
          $('.js-mock-param-table').append(Handlebars.templates.forms['mock-param-row']({param: [item]}))
        }
      });
    };

    $(document).on('click', 'ul.js-path-data li a', _this.onClickPathNav);
    $(document).on('click', '#tab a.js-mock-add', _this.addNewMock);
    $(document).on('click', '#tab .js-mock-li a', _this.onCLickMockList);
    $(document).on('click', '.js-mock-param-add', _this.addParamRow);
    $(document).on('click', '.js-mock-save', _this.mockSave);
    return _this;
  })();
</script>